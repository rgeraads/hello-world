; Ref: https://secure.php.net/manual/en/opcache.configuration.php

; Enables the opcode cache. When disabled, code is not optimised or cached.
; Can not be enabled during runtime, it can only be disabled.
opcache.enable=1
opcache.enable_cli=1

; Enables and sets the second level cache directory.
; It should improve performance when SHM memory is full, at server restart or
; SHM reset.
opcache.file_cache=/var/tmp/opcache/

opcache.preload=/app/config/preload.php
opcache.preload_user=www-data

; Ref: https://symfony.com/doc/current/performance.html

; The size of the shared memory storage used by OPcache, in megabytes.
; To find the best size you can call opcachegetstatus().
opcache.memory_consumption=256

; The maximum number of keys (and therefore scripts) in the OPcache hash table.
; To achieve best performance this should be set to a higher value than the amount
; of files your project has.
; $ find . -type f -print | grep php | wc -l
opcache.max_accelerated_files=20000

; If enabled, OPcache will check for updated scripts every
; opcache.revalidate_freq seconds. Docker images are stateless so we can safely
; disable timestamp validation.
opcache.validate_timestamps=0

; Determines the size of the realpath cache to be used by PHP.
; To find the best size for your cache you can call realpath_cache_size().
; If this value is lower or exactly the value listed below you should
; lower/increase the value.
realpath_cache_size=4096K

; Duration of time (in seconds) for which to cache realpath informationfor a
; given file or directory. Docker images are stateless so a high value is
; preferable.
realpath_cache_ttl=600
